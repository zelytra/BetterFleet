# DB configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USER:m7CaHqTPqojQceii}
quarkus.datasource.password=${DB_PASSWORD:A7aXfgh4@BM#7x85}
quarkus.datasource.jdbc.url=jdbc:postgresql://${DB_HOST:127.0.0.1:2600}/${DB_DATABASE:BetterFleet}
quarkus.hibernate-orm.database.generation=update

# Test
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:db
%test.quarkus.hibernate-orm.database.generation=update
%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
%test.quarkus.http.port=9090

# OIDC Configuration
%prod,dev.quarkus.oidc.auth-server-url=${KEYCLOAK_HOST:http://127.0.0.1:2604/auth}/realms/Betterfleet
%prod,dev.quarkus.oidc.client-id=${KEYCLOAK_CLIENT_ID:application}

# Debug
#quarkus.log.category."io.quarkus.oidc".level=DEBUG
#quarkus.log.category."io.smallrye.jwt".level=DEBUG

# Custom variables
proxy.check.api.key=${PROXY_CHECK_API_KEY: }
app.version=0.2.2

# CORS configuration
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST,DELETE,OPTIONS
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.exposed-headers=Access-Control-Allow-Origin,Access-Control-Allow-Credentials