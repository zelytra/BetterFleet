name: "CI"

on:
  pull_request: # Triggered on pull requests to any branch
  push:
    branches: # Additionally, trigger on push events to specific branches
      - develop

jobs:
  backend-build:
    runs-on: ubuntu-latest
    name: Quarkus build test
    defaults:
      run:
        working-directory: 'backend'
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn quarkus:build package
  frontend-build:
    name: Vite build test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 18.x ]

    defaults:
      run:
        working-directory: 'frontend'

    steps:
      - uses: actions/checkout@v3
      #        with:
      #          path: 'frontend/'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: npm ci
      - run: npm run build --if-present
  test-tauri:
    name: "Tauri build test"
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    defaults:
      run:
        working-directory: 'frontend'
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use

      # If tagName and releaseId are omitted tauri-action will only build the app and won't try to upload any asstes.
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}